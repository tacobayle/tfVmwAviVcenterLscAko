replicaCount: 1

image:
  repository: projects.registry.vmware.com/ako/ako
  pullPolicy: IfNotPresent

AKOSettings:
  primaryInstance: true # Defines AKO instance is primary or not. Value  indicates that AKO instance is primary. In a multiple AKO deployment in a cluster, only one AKO instance should be primary. Default value: true.
  enableEvents: "true" # Enables/disables Event broadcasting via AKO
  logLevel: "INFO" #enum: INFO|DEBUG|WARN|ERROR
  fullSyncFrequency: "1800" # This frequency controls how often AKO polls the Avi controller to update itself with cloud configurations.
  apiServerPort: 8080 # Internal port for AKO's API server for the liveness probe of the AKO pod default=8080
  deleteConfig: false # Has to be set to true in configmap if user wants to delete AKO created objects from AVI
  disableStaticRouteSync: false # If the POD networks are reachable from the Avi SE, set this knob to true.
  clusterName: cluster1 # A unique identifier for the kubernetes cluster, that helps distinguish the objects for this cluster in the avi controller. // MUST-EDIT
  cniPlugin: calico # Set the string if your CNI is calico or openshift. enum: calico|canal|flannel|openshift
  enableEVH: false # This enables the Enhanced Virtual Hosting Model in Avi Controller for the Virtual Services
  layer7Only: false # If this flag is switched on, then AKO will only do layer 7 loadbalancing.
  #NamespaceSelector contains label key and value used for namespacemigration
  #Same label has to be present on namespace/s which needs migration/sync to AKO
  namespaceSelector:
    labelKey: ""
    labelValue: ""
  servicesAPI: false # Flag that enables AKO in services API mode: https://kubernetes-sigs.github.io/service-apis/. Currently implemented only for L4. This flag uses the upstream GA APIs which are not backward compatible
                     # with the advancedL4 APIs which uses a fork and a version of v1alpha1pre1
  vipPerNamespace: "false" # Enabling this flag would tell AKO to create Parent VS per Namespace in EVH mode


NetworkSettings:
  nodeNetworkList: []
  enableRHI: false # This is a cluster wide setting for BGP peering.
  nsxtT1LR: '' # T1 Logical Segment mapping for backend network. Only applies to NSX-T cloud.
  bgpPeerLabels: [] # Select BGP peers using bgpPeerLabels, for selective VsVip advertisement.
    # bgpPeerLabels:
    #   - peer1
    #   - peer2
  vipNetworkList: # Network Name of the VIP network, multiple networks allowed only for AWS Cloud.
    - networkName: vxw-dvs-34-virtualwire-118-sid-1080117-sof2-01-vc08-avi-dev114
      cidr: 100.64.131.0/24

L7Settings:
  defaultIngController: "true"
  noPGForSNI: false # Switching this knob to true, will get rid of poolgroups from SNI VSes. Do not use this flag, if you don't want http caching. This will be deprecated once the controller support caching on PGs.
  serviceType: ClusterIP # enum NodePort|ClusterIP|NodePortLocal
  shardVSSize: SMALL # Use this to control the layer 7 VS numbers. This applies to both secure/insecure VSes but does not apply for passthrough. ENUMs: LARGE, MEDIUM, SMALL, DEDICATED
  passthroughShardSize: SMALL   # Control the passthrough virtualservice numbers using this ENUM. ENUMs: LARGE, MEDIUM, SMALL
  enableMCI: "false" # Enabling this flag would tell AKO to start processing multi-cluster ingress objects.

L4Settings:
  defaultDomain: "" # If multiple sub-domains are configured in the cloud, use this knob to set the default sub-domain to use for L4 VSes.
  autoFQDN: flat   # ENUM: default(<svc>.<ns>.<subdomain>), flat (<svc>-<ns>.<subdomain>), "disabled" If the value is disabled then the FQDN generation is disabled.

ControllerSettings:
  serviceEngineGroupName: seg-cluster1 # Name of the ServiceEngine Group.
  controllerVersion: 22.1.4 # The controller API version
  cloudName: Default-Cloud # The configured cloud name on the Avi controller.
  controllerHost: 10.41.135.164 # IP address or Hostname of Avi Controller
  tenantName: cluster1 # Name of the tenant where all the AKO objects will be created in AVI. // Required only if tenantsPerCluster is set to True

nodePortSelector: # Only applicable if serviceType is NodePort
  key: ""
  value: ""

resources:
  limits:
    cpu: 350m
    memory: 400Mi
  requests:
    cpu: 200m
    memory: 300Mi

podSecurityContext: {}

rbac:
  pspEnable: false

persistentVolumeClaim: ""
mountPath: "/log"
logFile: "avi.log"
